openapi: 3.0.0
info:
  version: v10
  title: Transactions API
paths:
  /transaction/in/creditcard:
    post:
      tags:
        - CreditCard
      operationId: CreditCard_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCreditCardCashinRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateCreditCardCashinRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/CreateCreditCardCashinRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateCreditCardCashinRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateCreditCardCashinRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateCreditCardCashinRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/CreateCreditCardCashinRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCreditCardCashinReply'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateCreditCardCashinReply'
            text/html:
              schema:
                $ref: '#/components/schemas/CreateCreditCardCashinReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/CreateCreditCardCashinReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCreditCardCashinReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/CreateCreditCardCashinReply'
      security:
        - ApiKeyAuth: []
  /transaction/in/creditcard/{token}:
    post:
      tags:
        - CreditCard
      operationId: CreditCard_CreateWithToken
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWithTokenCreditCardCashinRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateWithTokenCreditCardCashinRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/CreateWithTokenCreditCardCashinRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateWithTokenCreditCardCashinRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateWithTokenCreditCardCashinRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateWithTokenCreditCardCashinRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/CreateWithTokenCreditCardCashinRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCreditCardCashinReply'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateCreditCardCashinReply'
            text/html:
              schema:
                $ref: '#/components/schemas/CreateCreditCardCashinReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/CreateCreditCardCashinReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCreditCardCashinReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/CreateCreditCardCashinReply'
      security:
        - ApiKeyAuth: []
  /transaction/in/creditcard/capture:
    post:
      tags:
        - CreditCard
      operationId: CreditCard_Capture
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CaptureCreditCardCashinRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CaptureCreditCardCashinRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/CaptureCreditCardCashinRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CaptureCreditCardCashinRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/CaptureCreditCardCashinRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CaptureCreditCardCashinRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/CaptureCreditCardCashinRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCreditCardCashinReply'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateCreditCardCashinReply'
            text/html:
              schema:
                $ref: '#/components/schemas/CreateCreditCardCashinReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/CreateCreditCardCashinReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateCreditCardCashinReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/CreateCreditCardCashinReply'
      security:
        - ApiKeyAuth: []
  /transaction/in/creditcard/void:
    post:
      tags:
        - CreditCard
      operationId: CreditCard_Void
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoidCreditCardCashinRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/VoidCreditCardCashinRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/VoidCreditCardCashinRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/VoidCreditCardCashinRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/VoidCreditCardCashinRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VoidCreditCardCashinRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/VoidCreditCardCashinRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoidCreditCardCashinReply'
            text/json:
              schema:
                $ref: '#/components/schemas/VoidCreditCardCashinReply'
            text/html:
              schema:
                $ref: '#/components/schemas/VoidCreditCardCashinReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/VoidCreditCardCashinReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/VoidCreditCardCashinReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/VoidCreditCardCashinReply'
      security:
        - ApiKeyAuth: []
  /user/creditcard/add:
    post:
      tags:
        - CreditCard
      operationId: CreditCard_AddCreditCard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUserCreditCardRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/AddUserCreditCardRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/AddUserCreditCardRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/AddUserCreditCardRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/AddUserCreditCardRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddUserCreditCardRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/AddUserCreditCardRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddUserCreditCardReply'
            text/json:
              schema:
                $ref: '#/components/schemas/AddUserCreditCardReply'
            text/html:
              schema:
                $ref: '#/components/schemas/AddUserCreditCardReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/AddUserCreditCardReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/AddUserCreditCardReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/AddUserCreditCardReply'
      security:
        - ApiKeyAuth: []
  /user/creditcard/add/{tokenExchangeId}:
    post:
      tags:
        - CreditCard
      operationId: CreditCard_AddCreditCardWithTransactionId
      parameters:
        - name: tokenExchangeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddWithTokenExchangeIdUserCreditCardRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/AddWithTokenExchangeIdUserCreditCardRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/AddWithTokenExchangeIdUserCreditCardRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/AddWithTokenExchangeIdUserCreditCardRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/AddWithTokenExchangeIdUserCreditCardRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddWithTokenExchangeIdUserCreditCardRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/AddWithTokenExchangeIdUserCreditCardRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddUserCreditCardReply'
            text/json:
              schema:
                $ref: '#/components/schemas/AddUserCreditCardReply'
            text/html:
              schema:
                $ref: '#/components/schemas/AddUserCreditCardReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/AddUserCreditCardReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/AddUserCreditCardReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/AddUserCreditCardReply'
      security:
        - ApiKeyAuth: []
  /user/creditcard/remove/{token}:
    post:
      tags:
        - CreditCard
      operationId: Remove_Credit_Card_ByToken
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveUserCreditCardReply'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoveUserCreditCardReply'
            text/html:
              schema:
                $ref: '#/components/schemas/RemoveUserCreditCardReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/RemoveUserCreditCardReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/RemoveUserCreditCardReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/RemoveUserCreditCardReply'
      security:
        - ApiKeyAuth: []
  /user/creditcard/remove:
    post:
      tags:
        - CreditCard
      operationId: CreditCard_RemoveCreditCard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveUserCreditCardRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/RemoveUserCreditCardRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/RemoveUserCreditCardRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/RemoveUserCreditCardRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/RemoveUserCreditCardRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RemoveUserCreditCardRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/RemoveUserCreditCardRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveUserCreditCardReply'
            text/json:
              schema:
                $ref: '#/components/schemas/RemoveUserCreditCardReply'
            text/html:
              schema:
                $ref: '#/components/schemas/RemoveUserCreditCardReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/RemoveUserCreditCardReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/RemoveUserCreditCardReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/RemoveUserCreditCardReply'
      security:
        - ApiKeyAuth: []
  /user/creditcard/block/{token}:
    post:
      tags:
        - CreditCard
      operationId: Block_Credit_Card_ByToken
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockUserCreditCardReply'
            text/json:
              schema:
                $ref: '#/components/schemas/BlockUserCreditCardReply'
            text/html:
              schema:
                $ref: '#/components/schemas/BlockUserCreditCardReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/BlockUserCreditCardReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/BlockUserCreditCardReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/BlockUserCreditCardReply'
      security:
        - ApiKeyAuth: []
  /user/creditcard/block:
    post:
      tags:
        - CreditCard
      operationId: CreditCard_BlockCreditCard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockUserCreditCardRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/BlockUserCreditCardRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/BlockUserCreditCardRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BlockUserCreditCardRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/BlockUserCreditCardRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlockUserCreditCardRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/BlockUserCreditCardRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockUserCreditCardReply'
            text/json:
              schema:
                $ref: '#/components/schemas/BlockUserCreditCardReply'
            text/html:
              schema:
                $ref: '#/components/schemas/BlockUserCreditCardReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/BlockUserCreditCardReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/BlockUserCreditCardReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/BlockUserCreditCardReply'
      security:
        - ApiKeyAuth: []
  /user/creditcard/alias/{alias}/document/{document}:
    get:
      tags:
        - CreditCard
      operationId: CreditCard_GetUserCardByAlias
      parameters:
        - name: alias
          in: path
          required: true
          schema:
            type: string
        - name: document
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserCreditCardByAliasReply'
            text/json:
              schema:
                $ref: '#/components/schemas/GetUserCreditCardByAliasReply'
            text/html:
              schema:
                $ref: '#/components/schemas/GetUserCreditCardByAliasReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetUserCreditCardByAliasReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/GetUserCreditCardByAliasReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/GetUserCreditCardByAliasReply'
      security:
        - ApiKeyAuth: []
  /user/creditcard/token/{token}:
    get:
      tags:
        - CreditCard
      operationId: CreditCard_GetUserCardByToken
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserCreditCardByTokenReply'
            text/json:
              schema:
                $ref: '#/components/schemas/GetUserCreditCardByTokenReply'
            text/html:
              schema:
                $ref: '#/components/schemas/GetUserCreditCardByTokenReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetUserCreditCardByTokenReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/GetUserCreditCardByTokenReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/GetUserCreditCardByTokenReply'
      security:
        - ApiKeyAuth: []
  /user/creditcard/document/{document}:
    get:
      tags:
        - CreditCard
      operationId: CreditCard_GetUserCards
      parameters:
        - name: document
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserCreditCardsReply'
            text/json:
              schema:
                $ref: '#/components/schemas/GetUserCreditCardsReply'
            text/html:
              schema:
                $ref: '#/components/schemas/GetUserCreditCardsReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetUserCreditCardsReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/GetUserCreditCardsReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/GetUserCreditCardsReply'
      security:
        - ApiKeyAuth: []
  /user/creditcard/verify:
    post:
      tags:
        - CreditCard
      operationId: CreditCard_Verify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyCreditCardRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/VerifyCreditCardRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/VerifyCreditCardRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/VerifyCreditCardRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/VerifyCreditCardRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyCreditCardRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/VerifyCreditCardRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyCreditCardReply'
            text/json:
              schema:
                $ref: '#/components/schemas/VerifyCreditCardReply'
            text/html:
              schema:
                $ref: '#/components/schemas/VerifyCreditCardReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/VerifyCreditCardReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/VerifyCreditCardReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/VerifyCreditCardReply'
      security:
        - ApiKeyAuth: []
  /user/creditcard/verify/complete:
    post:
      tags:
        - CreditCard
      operationId: CreditCard_CompleteVerification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteCreditCardVerificationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CompleteCreditCardVerificationRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/CompleteCreditCardVerificationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CompleteCreditCardVerificationRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/CompleteCreditCardVerificationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompleteCreditCardVerificationRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/CompleteCreditCardVerificationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteCreditCardVerificationReply'
            text/json:
              schema:
                $ref: '#/components/schemas/CompleteCreditCardVerificationReply'
            text/html:
              schema:
                $ref: '#/components/schemas/CompleteCreditCardVerificationReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/CompleteCreditCardVerificationReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/CompleteCreditCardVerificationReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/CompleteCreditCardVerificationReply'
      security:
        - ApiKeyAuth: []
  /nearby/banks:
    get:
      tags:
        - Nearby
      operationId: Nearby_NearbyBanks
      parameters:
        - name: latitude
          in: query
          required: true
          schema:
            type: string
        - name: longitude
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NearbyBanksReply'
            text/json:
              schema:
                $ref: '#/components/schemas/NearbyBanksReply'
            text/html:
              schema:
                $ref: '#/components/schemas/NearbyBanksReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/NearbyBanksReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/NearbyBanksReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/NearbyBanksReply'
  /nearby/atms:
    get:
      tags:
        - Nearby
      operationId: Nearby_NearbyAtms
      parameters:
        - name: latitude
          in: query
          required: true
          schema:
            type: string
        - name: longitude
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NearbyAtmsReply'
            text/json:
              schema:
                $ref: '#/components/schemas/NearbyAtmsReply'
            text/html:
              schema:
                $ref: '#/components/schemas/NearbyAtmsReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/NearbyAtmsReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/NearbyAtmsReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/NearbyAtmsReply'
  /transaction/in/deposit/locations/nearby:
    get:
      tags:
        - Nearby
      operationId: Nearby_DepositLocationsNearby
      parameters:
        - name: latitude
          in: query
          required: true
          schema:
            type: string
        - name: longitude
          in: query
          required: true
          schema:
            type: string
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: network
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtmLocationsNearbyReply'
            text/json:
              schema:
                $ref: '#/components/schemas/AtmLocationsNearbyReply'
            text/html:
              schema:
                $ref: '#/components/schemas/AtmLocationsNearbyReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/AtmLocationsNearbyReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/AtmLocationsNearbyReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/AtmLocationsNearbyReply'
  /transaction/in/deposit/locations:
    get:
      tags:
        - Nearby
      operationId: Nearby_DepositLocationsNearbyOI
      parameters:
        - name: latitude
          in: query
          required: true
          schema:
            type: string
        - name: longitude
          in: query
          required: true
          schema:
            type: string
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: network
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtmLocationsNearbyReply'
            text/json:
              schema:
                $ref: '#/components/schemas/AtmLocationsNearbyReply'
            text/html:
              schema:
                $ref: '#/components/schemas/AtmLocationsNearbyReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/AtmLocationsNearbyReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/AtmLocationsNearbyReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/AtmLocationsNearbyReply'
  /paymentmethod:
    get:
      tags:
        - PaymentMethod
      operationId: PaymentMethod_Get
      parameters:
        - name: bankNumber
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodNewReply'
            text/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodNewReply'
            text/html:
              schema:
                $ref: '#/components/schemas/PaymentMethodNewReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaymentMethodNewReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/PaymentMethodNewReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/PaymentMethodNewReply'
  /transaction/out/recharge/products:
    post:
      tags:
        - Recharge
      operationId: Recharge_Products
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RechargeGetProductsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/RechargeGetProductsRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/RechargeGetProductsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/RechargeGetProductsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/RechargeGetProductsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RechargeGetProductsRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/RechargeGetProductsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RechargeGetProductsReply'
            text/json:
              schema:
                $ref: '#/components/schemas/RechargeGetProductsReply'
            text/html:
              schema:
                $ref: '#/components/schemas/RechargeGetProductsReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/RechargeGetProductsReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/RechargeGetProductsReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/RechargeGetProductsReply'
      security:
        - ApiKeyAuth: []
  /transaction/out/recharge/product/prices:
    post:
      tags:
        - Recharge
      operationId: Recharge_ProductPrices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RechargeGetProductPricesRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/RechargeGetProductPricesRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/RechargeGetProductPricesRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/RechargeGetProductPricesRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/RechargeGetProductPricesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RechargeGetProductPricesRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/RechargeGetProductPricesRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RechargeGetProductPricesReply'
            text/json:
              schema:
                $ref: '#/components/schemas/RechargeGetProductPricesReply'
            text/html:
              schema:
                $ref: '#/components/schemas/RechargeGetProductPricesReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/RechargeGetProductPricesReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/RechargeGetProductPricesReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/RechargeGetProductPricesReply'
      security:
        - ApiKeyAuth: []
  /transaction/out/recharge/create:
    post:
      tags:
        - Recharge
      operationId: Recharge_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RechargeCreateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/RechargeCreateRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/RechargeCreateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/RechargeCreateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/RechargeCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RechargeCreateRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/RechargeCreateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RechargeCreateReply'
            text/json:
              schema:
                $ref: '#/components/schemas/RechargeCreateReply'
            text/html:
              schema:
                $ref: '#/components/schemas/RechargeCreateReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/RechargeCreateReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/RechargeCreateReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/RechargeCreateReply'
      security:
        - ApiKeyAuth: []
  /transaction/batch/out/recharge/create:
    post:
      tags:
        - Recharge
      operationId: Recharge_BatchCashOutTransfer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRechargeCreateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/BatchRechargeCreateRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/BatchRechargeCreateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BatchRechargeCreateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/BatchRechargeCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchRechargeCreateRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/BatchRechargeCreateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchRechargeCreateReply'
            text/json:
              schema:
                $ref: '#/components/schemas/BatchRechargeCreateReply'
            text/html:
              schema:
                $ref: '#/components/schemas/BatchRechargeCreateReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/BatchRechargeCreateReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/BatchRechargeCreateReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/BatchRechargeCreateReply'
      security:
        - ApiKeyAuth: []
  /reconciliation/payments:
    get:
      tags:
        - Reconciliation
      operationId: Reconciliation_GetPayments
      parameters:
        - name: from
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: offset
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/bson:
              schema:
                type: object
      security:
        - ApiKeyAuth: []
  /reconciliation/payments/{id}:
    get:
      tags:
        - Reconciliation
      operationId: Reconciliation_GetPayment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/bson:
              schema:
                type: object
      security:
        - ApiKeyAuth: []
  /reconciliation/payments/{id}/transactions:
    get:
      tags:
        - Reconciliation
      operationId: Reconciliation_GetTransactions
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/bson:
              schema:
                type: object
      security:
        - ApiKeyAuth: []
  /reconciliation/transactions/{tid}:
    get:
      tags:
        - Reconciliation
      operationId: Reconciliation_GetTransaction
      parameters:
        - name: tid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
            application/bson:
              schema:
                type: object
      security:
        - ApiKeyAuth: []
  /transaction/paymentMethods:
    get:
      tags:
        - Transaction
      operationId: Transaction_PaymentOptions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodsReply'
            text/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodsReply'
            text/html:
              schema:
                $ref: '#/components/schemas/PaymentMethodsReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaymentMethodsReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/PaymentMethodsReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/PaymentMethodsReply'
  /transaction/subPaymentMethods/{id}:
    get:
      tags:
        - Transaction
      operationId: Transaction_SubPaymentMethods
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubPaymentMethodsReply'
            text/json:
              schema:
                $ref: '#/components/schemas/SubPaymentMethodsReply'
            text/html:
              schema:
                $ref: '#/components/schemas/SubPaymentMethodsReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/SubPaymentMethodsReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/SubPaymentMethodsReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/SubPaymentMethodsReply'
  /transaction/in/validate:
    post:
      tags:
        - Transaction
      operationId: Transaction_Validate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CashInValidateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CashInValidateRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/CashInValidateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CashInValidateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/CashInValidateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CashInValidateRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/CashInValidateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashInValidateReply'
            text/json:
              schema:
                $ref: '#/components/schemas/CashInValidateReply'
            text/html:
              schema:
                $ref: '#/components/schemas/CashInValidateReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/CashInValidateReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/CashInValidateReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/CashInValidateReply'
  /transaction/in/validateToken:
    post:
      tags:
        - Transaction
      operationId: Transaction_ValidateToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CashInValidateTokenRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CashInValidateTokenRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/CashInValidateTokenRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CashInValidateTokenRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/CashInValidateTokenRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CashInValidateTokenRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/CashInValidateTokenRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashInValidateTokenReply'
            text/json:
              schema:
                $ref: '#/components/schemas/CashInValidateTokenReply'
            text/html:
              schema:
                $ref: '#/components/schemas/CashInValidateTokenReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/CashInValidateTokenReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/CashInValidateTokenReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/CashInValidateTokenReply'
  /transaction/in/transfer:
    post:
      tags:
        - Transaction
      operationId: Transaction_CashInTransfer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CashInTransferRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CashInTransferRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/CashInTransferRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CashInTransferRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/CashInTransferRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CashInTransferRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/CashInTransferRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashInTransferReply'
            text/json:
              schema:
                $ref: '#/components/schemas/CashInTransferReply'
            text/html:
              schema:
                $ref: '#/components/schemas/CashInTransferReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/CashInTransferReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/CashInTransferReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/CashInTransferReply'
  /transaction/in/deposit:
    post:
      tags:
        - Transaction
      operationId: Transaction_CashInDeposit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CashInDepositRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CashInDepositRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/CashInDepositRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CashInDepositRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/CashInDepositRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CashInDepositRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/CashInDepositRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashInDepositReply'
            text/json:
              schema:
                $ref: '#/components/schemas/CashInDepositReply'
            text/html:
              schema:
                $ref: '#/components/schemas/CashInDepositReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/CashInDepositReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/CashInDepositReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/CashInDepositReply'
  /transaction/batch/in/deposit:
    post:
      tags:
        - Transaction
      operationId: Transaction_BatchCashInDeposit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCashInDepositRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/BatchCashInDepositRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/BatchCashInDepositRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BatchCashInDepositRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/BatchCashInDepositRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchCashInDepositRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/BatchCashInDepositRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCashInDepositReply'
            text/json:
              schema:
                $ref: '#/components/schemas/BatchCashInDepositReply'
            text/html:
              schema:
                $ref: '#/components/schemas/BatchCashInDepositReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/BatchCashInDepositReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/BatchCashInDepositReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/BatchCashInDepositReply'
  /transaction/in/addBalance:
    post:
      tags:
        - Transaction
      operationId: Transaction_CashOutAddBalance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CashInAddBalanceRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CashInAddBalanceRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/CashInAddBalanceRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CashInAddBalanceRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/CashInAddBalanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CashInAddBalanceRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/CashInAddBalanceRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashInAddBalanceReply'
            text/json:
              schema:
                $ref: '#/components/schemas/CashInAddBalanceReply'
            text/html:
              schema:
                $ref: '#/components/schemas/CashInAddBalanceReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/CashInAddBalanceReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/CashInAddBalanceReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/CashInAddBalanceReply'
  /transaction/in/changePaymentMethod:
    post:
      tags:
        - Transaction
      operationId: Transaction_ChangePaymentMethod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InChangePaymentMethod'
          text/json:
            schema:
              $ref: '#/components/schemas/InChangePaymentMethod'
          text/html:
            schema:
              $ref: '#/components/schemas/InChangePaymentMethod'
          application/xml:
            schema:
              $ref: '#/components/schemas/InChangePaymentMethod'
          text/xml:
            schema:
              $ref: '#/components/schemas/InChangePaymentMethod'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InChangePaymentMethod'
          application/bson:
            schema:
              $ref: '#/components/schemas/InChangePaymentMethod'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InChangePaymentMethodReply'
            text/json:
              schema:
                $ref: '#/components/schemas/InChangePaymentMethodReply'
            text/html:
              schema:
                $ref: '#/components/schemas/InChangePaymentMethodReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/InChangePaymentMethodReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/InChangePaymentMethodReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/InChangePaymentMethodReply'
  /transaction/in/bank-slip:
    post:
      tags:
        - Transaction
      operationId: Transaction_Create_BankSlip
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBankSlipRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateBankSlipRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/CreateBankSlipRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateBankSlipRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateBankSlipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateBankSlipRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/CreateBankSlipRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBankSlipReply'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateBankSlipReply'
            text/html:
              schema:
                $ref: '#/components/schemas/CreateBankSlipReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/CreateBankSlipReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateBankSlipReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/CreateBankSlipReply'
  /transaction/in/bank-slip/pid/{pid}/tid/{tid}:
    get:
      tags:
        - Transaction
      operationId: Transaction_Get_BankSlip
      parameters:
        - name: tid
          in: path
          required: true
          schema:
            type: string
        - name: pid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBankSlipReply'
            text/json:
              schema:
                $ref: '#/components/schemas/GetBankSlipReply'
            text/html:
              schema:
                $ref: '#/components/schemas/GetBankSlipReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetBankSlipReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBankSlipReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/GetBankSlipReply'
  /transaction/out/transactionDebit:
    post:
      tags:
        - Transaction
      operationId: Transaction_CashOutTransferDebit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CashOutTransferDebitRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CashOutTransferDebitRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/CashOutTransferDebitRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CashOutTransferDebitRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/CashOutTransferDebitRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CashOutTransferDebitRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/CashOutTransferDebitRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashOutBalanceDebitReply'
            text/json:
              schema:
                $ref: '#/components/schemas/CashOutBalanceDebitReply'
            text/html:
              schema:
                $ref: '#/components/schemas/CashOutBalanceDebitReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/CashOutBalanceDebitReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/CashOutBalanceDebitReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/CashOutBalanceDebitReply'
  /transaction/out/balanceDebit:
    post:
      tags:
        - Transaction
      operationId: Transaction_CashOutBalanceDebit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CashOutBalanceDebitRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CashOutBalanceDebitRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/CashOutBalanceDebitRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CashOutBalanceDebitRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/CashOutBalanceDebitRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CashOutBalanceDebitRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/CashOutBalanceDebitRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashOutBalanceDebitReply'
            text/json:
              schema:
                $ref: '#/components/schemas/CashOutBalanceDebitReply'
            text/html:
              schema:
                $ref: '#/components/schemas/CashOutBalanceDebitReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/CashOutBalanceDebitReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/CashOutBalanceDebitReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/CashOutBalanceDebitReply'
  /transaction/out/billPayment:
    post:
      tags:
        - Transaction
      operationId: Transaction_CashOutBillPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CashOutBillPaymentRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CashOutBillPaymentRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/CashOutBillPaymentRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CashOutBillPaymentRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/CashOutBillPaymentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CashOutBillPaymentRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/CashOutBillPaymentRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashOutBillPaymentReply'
            text/json:
              schema:
                $ref: '#/components/schemas/CashOutBillPaymentReply'
            text/html:
              schema:
                $ref: '#/components/schemas/CashOutBillPaymentReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/CashOutBillPaymentReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/CashOutBillPaymentReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/CashOutBillPaymentReply'
  /transaction/out/receipt/{tid}:
    get:
      tags:
        - Transaction
      operationId: Transaction_GetCashOutReceiptByTid
      parameters:
        - name: tid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashOutReceiptReply'
            text/json:
              schema:
                $ref: '#/components/schemas/CashOutReceiptReply'
            text/html:
              schema:
                $ref: '#/components/schemas/CashOutReceiptReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/CashOutReceiptReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/CashOutReceiptReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/CashOutReceiptReply'
  /transaction/out/ebill:
    post:
      tags:
        - Transaction
      operationId: Transaction_Ebill
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EBillRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EBillRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/EBillRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/EBillRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/EBillRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EBillRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/EBillRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EBillReply'
            text/json:
              schema:
                $ref: '#/components/schemas/EBillReply'
            text/html:
              schema:
                $ref: '#/components/schemas/EBillReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/EBillReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/EBillReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/EBillReply'
  /transaction/out/verifyBillPayment/{barcode}:
    get:
      tags:
        - Transaction
      operationId: Transaction_CashOutVerifyBillPayment
      parameters:
        - name: barcode
          in: path
          required: true
          schema:
            type: string
        - name: pid
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: prodId
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashOutVerifyBillPaymentReply'
            text/json:
              schema:
                $ref: '#/components/schemas/CashOutVerifyBillPaymentReply'
            text/html:
              schema:
                $ref: '#/components/schemas/CashOutVerifyBillPaymentReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/CashOutVerifyBillPaymentReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/CashOutVerifyBillPaymentReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/CashOutVerifyBillPaymentReply'
  /transaction/out/verifybankaccount:
    post:
      tags:
        - Transaction
      operationId: Transaction_CashOutVerifyBankAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CashOutVerifyBankAccount'
          text/json:
            schema:
              $ref: '#/components/schemas/CashOutVerifyBankAccount'
          text/html:
            schema:
              $ref: '#/components/schemas/CashOutVerifyBankAccount'
          application/xml:
            schema:
              $ref: '#/components/schemas/CashOutVerifyBankAccount'
          text/xml:
            schema:
              $ref: '#/components/schemas/CashOutVerifyBankAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CashOutVerifyBankAccount'
          application/bson:
            schema:
              $ref: '#/components/schemas/CashOutVerifyBankAccount'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashOutVerifyBankAccountReply'
            text/json:
              schema:
                $ref: '#/components/schemas/CashOutVerifyBankAccountReply'
            text/html:
              schema:
                $ref: '#/components/schemas/CashOutVerifyBankAccountReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/CashOutVerifyBankAccountReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/CashOutVerifyBankAccountReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/CashOutVerifyBankAccountReply'
  /transaction/out/transfer:
    post:
      tags:
        - Transaction
      operationId: Transaction_CashOutTransfer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CashOutTransferRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CashOutTransferRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/CashOutTransferRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CashOutTransferRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/CashOutTransferRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CashOutTransferRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/CashOutTransferRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashOutTransferReply'
            text/json:
              schema:
                $ref: '#/components/schemas/CashOutTransferReply'
            text/html:
              schema:
                $ref: '#/components/schemas/CashOutTransferReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/CashOutTransferReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/CashOutTransferReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/CashOutTransferReply'
  /transaction/batch/out/transfer:
    post:
      tags:
        - Transaction
      operationId: Transaction_BatchCashOutTransfer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCashOutTransferRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/BatchCashOutTransferRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/BatchCashOutTransferRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BatchCashOutTransferRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/BatchCashOutTransferRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchCashOutTransferRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/BatchCashOutTransferRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCashOutTransferReply'
            text/json:
              schema:
                $ref: '#/components/schemas/BatchCashOutTransferReply'
            text/html:
              schema:
                $ref: '#/components/schemas/BatchCashOutTransferReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/BatchCashOutTransferReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/BatchCashOutTransferReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/BatchCashOutTransferReply'
  /transaction/getByTid/{tid}/pid/{pid}:
    get:
      tags:
        - Transaction
      operationId: Transaction_GetByTid
      parameters:
        - name: tid
          in: path
          required: true
          schema:
            type: string
        - name: pid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashInTransferReply'
            text/json:
              schema:
                $ref: '#/components/schemas/CashInTransferReply'
            text/html:
              schema:
                $ref: '#/components/schemas/CashInTransferReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/CashInTransferReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/CashInTransferReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/CashInTransferReply'
  /transaction/getByIdentifier/{uuid}:
    get:
      tags:
        - Transaction
      operationId: Transaction_GetByIdentifier
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetByIdentifierReply'
            text/json:
              schema:
                $ref: '#/components/schemas/GetByIdentifierReply'
            text/html:
              schema:
                $ref: '#/components/schemas/GetByIdentifierReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetByIdentifierReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/GetByIdentifierReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/GetByIdentifierReply'
  /transaction/getByLot/{lotId}:
    get:
      tags:
        - Transaction
      operationId: Transaction_GetByLot
      parameters:
        - name: lotId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsGetByLotReply'
            text/json:
              schema:
                $ref: '#/components/schemas/TransactionsGetByLotReply'
            text/html:
              schema:
                $ref: '#/components/schemas/TransactionsGetByLotReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/TransactionsGetByLotReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/TransactionsGetByLotReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/TransactionsGetByLotReply'
  /transaction/cancelbytid/{tid}/pid/{pid}:
    post:
      tags:
        - Transaction
      operationId: Transaction_Cancel_ByTid
      parameters:
        - name: tid
          in: path
          required: true
          schema:
            type: string
        - name: pid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelReply'
            text/json:
              schema:
                $ref: '#/components/schemas/CancelReply'
            text/html:
              schema:
                $ref: '#/components/schemas/CancelReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/CancelReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/CancelReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/CancelReply'
  /transaction/cancelbytid/{tid}/pid/{pid}/cpf/{cpf}:
    post:
      tags:
        - Transaction
      operationId: Transaction_Cancel_ByUser
      parameters:
        - name: tid
          in: path
          required: true
          schema:
            type: string
        - name: pid
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: cpf
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelReply'
            text/json:
              schema:
                $ref: '#/components/schemas/CancelReply'
            text/html:
              schema:
                $ref: '#/components/schemas/CancelReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/CancelReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/CancelReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/CancelReply'
  /transaction/batch/cancel:
    post:
      tags:
        - Transaction
      operationId: Transaction_BatchCancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCancelRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/BatchCancelRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/BatchCancelRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BatchCancelRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/BatchCancelRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchCancelRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/BatchCancelRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchCancelReply'
            text/json:
              schema:
                $ref: '#/components/schemas/BatchCancelReply'
            text/html:
              schema:
                $ref: '#/components/schemas/BatchCancelReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/BatchCancelReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/BatchCancelReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/BatchCancelReply'
  /user/transactionpending/{pid}/{document}:
    get:
      tags:
        - User
      operationId: User_GetTransactionPending
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: document
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTransactionPendingReply'
            text/json:
              schema:
                $ref: '#/components/schemas/GetTransactionPendingReply'
            text/html:
              schema:
                $ref: '#/components/schemas/GetTransactionPendingReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetTransactionPendingReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/GetTransactionPendingReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/GetTransactionPendingReply'
      security:
        - ApiKeyAuth: []
  /user/lasttransactions/{pid}/{document}:
    get:
      tags:
        - User
      operationId: User_GetLastTransactions
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: document
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLastTransactionsReply'
            text/json:
              schema:
                $ref: '#/components/schemas/GetLastTransactionsReply'
            text/html:
              schema:
                $ref: '#/components/schemas/GetLastTransactionsReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetLastTransactionsReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/GetLastTransactionsReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/GetLastTransactionsReply'
      security:
        - ApiKeyAuth: []
  /user/listbankaccounts:
    post:
      tags:
        - User
      operationId: User_ListUserBankAccounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBankAccountListRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UserBankAccountListRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/UserBankAccountListRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserBankAccountListRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/UserBankAccountListRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserBankAccountListRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/UserBankAccountListRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBankAccountListReply'
            text/json:
              schema:
                $ref: '#/components/schemas/UserBankAccountListReply'
            text/html:
              schema:
                $ref: '#/components/schemas/UserBankAccountListReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserBankAccountListReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/UserBankAccountListReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/UserBankAccountListReply'
      security:
        - ApiKeyAuth: []
  /user/bankaccount:
    post:
      tags:
        - User
      operationId: User_AddOrUpdateUserBankAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBankAccountRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UserBankAccountRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/UserBankAccountRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserBankAccountRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/UserBankAccountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserBankAccountRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/UserBankAccountRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBankAccountReply'
            text/json:
              schema:
                $ref: '#/components/schemas/UserBankAccountReply'
            text/html:
              schema:
                $ref: '#/components/schemas/UserBankAccountReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserBankAccountReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/UserBankAccountReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/UserBankAccountReply'
      security:
        - ApiKeyAuth: []
    delete:
      tags:
        - User
      operationId: User_DeleteUserBankAccount
      parameters:
        - name: bankAccountId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: pid
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: prodId
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBankAccountReply'
            text/json:
              schema:
                $ref: '#/components/schemas/UserBankAccountReply'
            text/html:
              schema:
                $ref: '#/components/schemas/UserBankAccountReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserBankAccountReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/UserBankAccountReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/UserBankAccountReply'
      security:
        - ApiKeyAuth: []
  /user/{document}/accounting/balance:
    get:
      tags:
        - User
      operationId: User_GetBalanceInAccountingByDocument
      parameters:
        - name: document
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBalanceReply'
            text/json:
              schema:
                $ref: '#/components/schemas/UserBalanceReply'
            text/html:
              schema:
                $ref: '#/components/schemas/UserBalanceReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserBalanceReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/UserBalanceReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/UserBalanceReply'
      security:
        - ApiKeyAuth: []
  /user/account:
    post:
      tags:
        - User
      summary: Create a new account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
      responses:
        '201':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CreateAccountReply'
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccountReply'
            text/json:
              schema:
                $ref: '#/components/schemas/CreateAccountReply'
  /version:
    get:
      tags:
        - Version
      operationId: Version_Get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            text/html:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
            application/bson:
              schema:
                type: string
  /transaction/out/withdrawal/networks:
    get:
      tags:
        - Withdrawal
      operationId: Withdrawal_ListNetworks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WithdrawalNetworksReply'
            text/json:
              schema:
                $ref: '#/components/schemas/WithdrawalNetworksReply'
            text/html:
              schema:
                $ref: '#/components/schemas/WithdrawalNetworksReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/WithdrawalNetworksReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/WithdrawalNetworksReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/WithdrawalNetworksReply'
      security:
        - ApiKeyAuth: []
  /transaction/out/withdrawal/create:
    post:
      tags:
        - Withdrawal
      operationId: Withdrawal_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawalCreateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WithdrawalCreateRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/WithdrawalCreateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WithdrawalCreateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WithdrawalCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WithdrawalCreateRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/WithdrawalCreateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WithdrawalCreateReply'
            text/json:
              schema:
                $ref: '#/components/schemas/WithdrawalCreateReply'
            text/html:
              schema:
                $ref: '#/components/schemas/WithdrawalCreateReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/WithdrawalCreateReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/WithdrawalCreateReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/WithdrawalCreateReply'
      security:
        - ApiKeyAuth: []
  /transaction/out/withdrawal/code/create:
    post:
      tags:
        - Withdrawal
      operationId: Withdrawal_CodeCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawalCodeCreateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WithdrawalCodeCreateRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/WithdrawalCodeCreateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WithdrawalCodeCreateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WithdrawalCodeCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WithdrawalCodeCreateRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/WithdrawalCodeCreateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WithdrawalCodeCreateReply'
            text/json:
              schema:
                $ref: '#/components/schemas/WithdrawalCodeCreateReply'
            text/html:
              schema:
                $ref: '#/components/schemas/WithdrawalCodeCreateReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/WithdrawalCodeCreateReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/WithdrawalCodeCreateReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/WithdrawalCodeCreateReply'
      security:
        - ApiKeyAuth: []
  /transaction/out/withdrawal/process:
    post:
      tags:
        - Withdrawal
      operationId: Withdrawal_Process
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawalProcessRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WithdrawalProcessRequest'
          text/html:
            schema:
              $ref: '#/components/schemas/WithdrawalProcessRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/WithdrawalProcessRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/WithdrawalProcessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WithdrawalProcessRequest'
          application/bson:
            schema:
              $ref: '#/components/schemas/WithdrawalProcessRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WithdrawalProcessReply'
            text/json:
              schema:
                $ref: '#/components/schemas/WithdrawalProcessReply'
            text/html:
              schema:
                $ref: '#/components/schemas/WithdrawalProcessReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/WithdrawalProcessReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/WithdrawalProcessReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/WithdrawalProcessReply'
      security:
        - ApiKeyAuth: []
  /transaction/out/withdrawal/locations/nearby:
    get:
      tags:
        - Withdrawal
      operationId: Withdrawal_LocationsNearby
      parameters:
        - name: latitude
          in: query
          required: true
          schema:
            type: string
        - name: longitude
          in: query
          required: true
          schema:
            type: string
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: network
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtmLocationsNearbyReply'
            text/json:
              schema:
                $ref: '#/components/schemas/AtmLocationsNearbyReply'
            text/html:
              schema:
                $ref: '#/components/schemas/AtmLocationsNearbyReply'
            application/xml:
              schema:
                $ref: '#/components/schemas/AtmLocationsNearbyReply'
            text/xml:
              schema:
                $ref: '#/components/schemas/AtmLocationsNearbyReply'
            application/bson:
              schema:
                $ref: '#/components/schemas/AtmLocationsNearbyReply'
      security:
        - ApiKeyAuth: []
servers:
  - url: https://www.fastcash.com.br/apiv10Microcash
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      description: APIKey Authentication
      name: Authorization
      in: header
  schemas:
    KeyDto:
      required:
        - Type
        - Value
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/KeyType'
        Value:
          type: string
      additionalProperties: false
    KeyType:
      enum:
        - EVP
        - CPF
        - CNPJ
        - EMAIL
        - PHONE
      type: string
    AccountDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        number:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/AccountType'
        bankNumber:
          type: string
          nullable: true
        branch:
          type: string
          nullable: true
        keys:
          type: array
          items:
            $ref: '#/components/schemas/KeyDto'
          nullable: true
      additionalProperties: false
    AccountType:
      enum:
        - Payment
      type: string
    CreateAccountReply:
      type: object
      properties:
        Success:
          type: boolean
        Message:
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/CreateAccountReplyValue'
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/PropertyErrorData'
          nullable: true
      additionalProperties: false
    CreateAccountReplyValue:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/AccountDto'
      additionalProperties: false
    CreateAccountRequest:
      required:
        - Name
        - Type
      type: object
      properties:
        Name:
          type: string
        Type:
          $ref: '#/components/schemas/AccountType'
      additionalProperties: false
    CreateCreditCardCashinRequest:
      type: object
      properties:
        Tid:
          type: string
        Pid:
          format: int32
          type: integer
        ProdId:
          format: int32
          type: integer
        Custom:
          type: string
        Amount:
          format: double
          type: number
        Description:
          type: string
        Name:
          type: string
        Email:
          type: string
        MobilePhone:
          type: string
        Document:
          type: string
        CreditCard:
          $ref: '#/components/schemas/CreditCardWithTokens'
        Capture:
          type: boolean
        Installments:
          format: int32
          type: integer
        AntiFraud:
          $ref: '#/components/schemas/CreditCardAntiFraud'
    CreditCardWithTokens:
      type: object
      properties:
        Alias:
          type: string
        Brand:
          type: string
        HolderName:
          type: string
        ExpirationMonth:
          type: string
        ExpirationYear:
          type: string
        Number:
          type: string
        Cvv:
          type: string
        MaskedNumber:
          type: string
    CreditCardAntiFraud:
      type: object
      properties:
        TotalAmount:
          format: double
          type: number
        ShippingAmount:
          format: double
          type: number
        TaxAmount:
          format: double
          type: number
        Currency:
          type: string
        ClientIp:
          type: string
        FirstMessage:
          format: date-time
          type: string
        MessagesExchangedCount:
          format: int32
          type: integer
        Visitor:
          type: string
        ServiceLevel:
          enum:
            - Simple
            - Complete
          type: string
        SellerName:
          type: string
        SellerDocument:
          type: string
        SellerSegment:
          type: string
        ShoppingCart:
          type: array
          items:
            $ref: '#/components/schemas/AntiFraudShoppingCart'
        Billing:
          $ref: '#/components/schemas/AntiFraudAddress'
        Shipping:
          $ref: '#/components/schemas/AntiFraudAddress'
    AntiFraudShoppingCart:
      type: object
      properties:
        Sku:
          type: string
        Category:
          type: string
        ProductName:
          type: string
        ProductDescription:
          type: string
        UnitCost:
          format: double
          type: number
        Quantity:
          format: int32
          type: integer
        Discount:
          format: double
          type: number
        IsGift:
          type: boolean
        ShippingCompany:
          type: string
    AntiFraudAddress:
      required:
        - ZipCode
        - Street
        - Number
        - City
        - State
        - Country
      type: object
      properties:
        Owner:
          $ref: '#/components/schemas/AntiFraudPerson'
        ZipCode:
          type: string
        Street:
          type: string
        Number:
          type: string
        City:
          type: string
        Neighborhood:
          type: string
        State:
          type: string
        Country:
          type: string
        Reference:
          type: string
        AdditionalInformation:
          type: string
    AntiFraudPerson:
      type: object
      properties:
        Name:
          type: string
        Document:
          type: string
        Email:
          type: string
        Phone:
          type: string
    CreateCreditCardCashinReply:
      type: object
      properties:
        Result:
          $ref: '#/components/schemas/CashinCreditCard'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/PropertyErrorData'
    CashinCreditCard:
      type: object
      properties:
        Transaction:
          $ref: '#/components/schemas/Transaction'
        Card:
          $ref: '#/components/schemas/CashinCard'
        Parameters:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
    PropertyErrorData:
      type: object
      properties:
        Code:
          format: int32
          type: integer
        PropertyName:
          type: string
        ErrorMessage:
          type: string
        AttemptedValue:
          type: object
    Transaction:
      required:
        - Tid
        - Pid
        - ProdId
        - Price
        - ItemDescription
        - PaymentMethod
        - SubPaymentMethod
      type: object
      properties:
        Tid:
          type: string
        Pid:
          format: int32
          type: integer
        ProdId:
          format: int32
          type: integer
        Custom:
          type: string
        Price:
          format: double
          type: number
        ItemDescription:
          type: string
        PaymentMethod:
          format: int32
          type: integer
        SubPaymentMethod:
          format: int32
          type: integer
        Status:
          format: int32
          type: integer
        StatusName:
          type: string
    CashinCard:
      type: object
      properties:
        Token:
          type: string
    Parameter:
      type: object
      properties:
        Id:
          type: string
        Name:
          type: string
        Value:
          type: string
    CreateWithTokenCreditCardCashinRequest:
      type: object
      properties:
        Tid:
          type: string
        Pid:
          format: int32
          type: integer
        ProdId:
          format: int32
          type: integer
        Custom:
          type: string
        Amount:
          format: double
          type: number
        Description:
          type: string
        Name:
          type: string
        Email:
          type: string
        MobilePhone:
          type: string
        Document:
          type: string
        Capture:
          type: boolean
        Installments:
          format: int32
          type: integer
        AntiFraud:
          $ref: '#/components/schemas/CreditCardAntiFraud'
    CaptureCreditCardCashinRequest:
      type: object
      properties:
        Tid:
          type: string
        Pid:
          format: int32
          type: integer
        ProdId:
          format: int32
          type: integer
    VoidCreditCardCashinRequest:
      type: object
      properties:
        Tid:
          type: string
        Pid:
          format: int32
          type: integer
        ProdId:
          format: int32
          type: integer
        Amount:
          format: double
          type: number
    VoidCreditCardCashinReply:
      type: object
      properties:
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/PropertyErrorData'
    AddUserCreditCardRequest:
      type: object
      properties:
        CustomerExternalId:
          type: string
        CustomerName:
          type: string
        CustomerDocument:
          type: string
        CreditCard:
          $ref: '#/components/schemas/CreditCardWithTokens'
    AddUserCreditCardReply:
      type: object
      properties:
        Result:
          $ref: '#/components/schemas/StoredCreditCard'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/PropertyErrorData'
    StoredCreditCard:
      type: object
      properties:
        Alias:
          type: string
        Brand:
          type: string
        HolderName:
          type: string
        ExpirationMonth:
          type: string
        ExpirationYear:
          type: string
        Number:
          type: string
        Cvv:
          type: string
        Token:
          type: string
        MaskedNumber:
          type: string
        Enabled:
          type: boolean
        Blocked:
          type: boolean
        State:
          type: string
        Verified:
          type: boolean
        Valid:
          type: boolean
    AddWithTokenExchangeIdUserCreditCardRequest:
      type: object
      properties:
        CustomerExternalId:
          type: string
        CustomerName:
          type: string
        CustomerDocument:
          type: string
        CreditCard:
          $ref: '#/components/schemas/CreditCardWithTokenExchangeId'
    CreditCardWithTokenExchangeId:
      type: object
      properties:
        Alias:
          type: string
        Brand:
          type: string
        HolderName:
          type: string
        ExpirationMonth:
          type: string
        ExpirationYear:
          type: string
    RemoveUserCreditCardReply:
      type: object
      properties:
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/PropertyErrorData'
    RemoveUserCreditCardRequest:
      type: object
      properties:
        CustomerExternalId:
          type: string
        CustomerName:
          type: string
        CustomerDocument:
          type: string
        Alias:
          type: string
    BlockUserCreditCardReply:
      type: object
      properties:
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/PropertyErrorData'
    BlockUserCreditCardRequest:
      type: object
      properties:
        CustomerExternalId:
          type: string
        CustomerName:
          type: string
        CustomerDocument:
          type: string
        Alias:
          type: string
    GetUserCreditCardByAliasReply:
      type: object
      properties:
        Result:
          $ref: '#/components/schemas/StoredCreditCard'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/PropertyErrorData'
    GetUserCreditCardByTokenReply:
      type: object
      properties:
        Result:
          $ref: '#/components/schemas/StoredCreditCard'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/PropertyErrorData'
    GetUserCreditCardsReply:
      type: object
      properties:
        Result:
          type: array
          items:
            $ref: '#/components/schemas/StoredCreditCard'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/PropertyErrorData'
    VerifyCreditCardRequest:
      type: object
      properties:
        Pid:
          format: int32
          type: integer
        ProdId:
          format: int32
          type: integer
        CreditCard:
          $ref: '#/components/schemas/CreditCardToken'
    CreditCardToken:
      type: object
      properties:
        Token:
          type: string
    VerifyCreditCardReply:
      type: object
      properties:
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/PropertyErrorData'
    CompleteCreditCardVerificationRequest:
      type: object
      properties:
        CreditCard:
          $ref: '#/components/schemas/CreditCardToken'
        Amount:
          format: double
          type: number
    CompleteCreditCardVerificationReply:
      type: object
      properties:
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/PropertyErrorData'
    NearbyBanksReply:
      type: object
      properties:
        Result:
          $ref: '#/components/schemas/NearbyPlaces'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    NearbyPlaces:
      type: object
      properties:
        Results:
          type: array
          items:
            $ref: '#/components/schemas/NearbyPlace'
        Status:
          type: string
    NearbyPlace:
      type: object
      properties:
        Geometry:
          $ref: '#/components/schemas/NearbyPlaceGeometry'
        Name:
          type: string
        OpeningHours:
          $ref: '#/components/schemas/NearbyPlaceOpeningHours'
        Vicinity:
          type: string
    NearbyPlaceGeometry:
      type: object
      properties:
        Location:
          $ref: '#/components/schemas/NearbyPlaceLocation'
    NearbyPlaceOpeningHours:
      type: object
      properties:
        open_now:
          type: boolean
    NearbyPlaceLocation:
      type: object
      properties:
        Lat:
          format: double
          type: number
        Lng:
          format: double
          type: number
    NearbyAtmsReply:
      type: object
      properties:
        Result:
          $ref: '#/components/schemas/NearbyPlaces'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    AtmLocationsNearbyReply:
      type: object
      properties:
        Result:
          type: array
          items:
            $ref: '#/components/schemas/AtmNearbyLocation'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    AtmNearbyLocation:
      type: object
      properties:
        Network:
          $ref: '#/components/schemas/AtmNetworks'
        Code:
          type: string
        Latitude:
          type: string
        Longitude:
          type: string
        AvailableCashBills:
          type: array
          items:
            format: int32
            type: integer
        WorkingHours:
          type: object
          properties:
            Sunday:
              type: array
              items:
                format: int32
                type: integer
            Monday:
              type: array
              items:
                format: int32
                type: integer
            Tuesday:
              type: array
              items:
                format: int32
                type: integer
            Wednesday:
              type: array
              items:
                format: int32
                type: integer
            Thursday:
              type: array
              items:
                format: int32
                type: integer
            Friday:
              type: array
              items:
                format: int32
                type: integer
            Saturday:
              type: array
              items:
                format: int32
                type: integer
        Address:
          $ref: '#/components/schemas/AtmLocationAddress'
        Type:
          enum:
            - OnlyWithdraw
            - DepositNaturalAndLegalPerson
            - DepositLegalPerson
          type: string
    AtmNetworks:
      type: object
      properties:
        Network:
          format: int32
          type: integer
        Name:
          type: string
        LogoImageUrl:
          type: string
        MapIconUrl:
          type: string
    AtmLocationAddress:
      type: object
      properties:
        Address:
          type: string
        Number:
          type: string
        Complement:
          type: string
        Neighborhood:
          type: string
        City:
          type: string
        State:
          type: string
        Country:
          type: string
        Zipcode:
          type: string
        LocationDetails:
          type: string
    PaymentMethodNewReply:
      type: object
      properties:
        Result:
          type: array
          items:
            $ref: '#/components/schemas/NewPaymentMethod'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    NewPaymentMethod:
      type: object
      properties:
        PaymentMethod:
          $ref: '#/components/schemas/PaymentMethod'
        SubPaymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/SubPaymentMethod'
    PaymentMethod:
      type: object
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        Description:
          type: string
        Icon:
          type: string
        Descricao:
          type: string
          readOnly: true
        Icone:
          type: string
          readOnly: true
    SubPaymentMethod:
      type: object
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        Description:
          type: string
        Icon:
          type: string
        BankNumber:
          type: string
        Descricao:
          type: string
          readOnly: true
        Icone:
          type: string
          readOnly: true
    RechargeGetProductsRequest:
      type: object
      properties:
        Product:
          enum:
            - PhoneRecharge
            - TransportationRecharge
            - EntertainmentRecharge
            - GamesRecharge
            - WalletRecharge
          type: string
    RechargeGetProductsReply:
      type: object
      properties:
        Result:
          $ref: '#/components/schemas/RechargeProducts'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    RechargeProducts:
      type: object
      properties:
        Product:
          type: string
        Options:
          type: array
          items:
            $ref: '#/components/schemas/RechargeProductOption'
    RechargeProductOption:
      type: object
      properties:
        Name:
          type: string
        PriceRange:
          type: array
          items:
            format: double
            type: number
        PriceList:
          type: array
          items:
            format: double
            type: number
        CustomerIdentifierField:
          type: string
    RechargeGetProductPricesRequest:
      type: object
      properties:
        Product:
          enum:
            - PhoneRecharge
            - TransportationRecharge
            - EntertainmentRecharge
            - GamesRecharge
            - WalletRecharge
          type: string
        RechargeOptionName:
          type: string
        ReferenceValue:
          type: string
    RechargeGetProductPricesReply:
      type: object
      properties:
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/PropertyErrorData'
        Result:
          $ref: '#/components/schemas/RechargeProductPrices'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    RechargeProductPrices:
      type: object
      properties:
        Options:
          type: array
          items:
            $ref: '#/components/schemas/RechargeProductPriceOptions'
    RechargeProductPriceOptions:
      type: object
      properties:
        Name:
          type: string
        ReferenceValue:
          type: string
        PriceRange:
          type: array
          items:
            format: double
            type: number
        PriceList:
          type: array
          items:
            format: double
            type: number
    RechargeCreateRequest:
      type: object
      properties:
        Tid:
          type: string
        Pid:
          format: int32
          type: integer
        ProdId:
          format: int32
          type: integer
        Product:
          enum:
            - PhoneRecharge
            - TransportationRecharge
            - EntertainmentRecharge
            - GamesRecharge
            - WalletRecharge
          type: string
        RechargeOptionName:
          type: string
        CustomerIdentifier:
          type: string
        Amount:
          format: double
          type: number
        Name:
          type: string
        Email:
          type: string
        Document:
          type: string
        MobilePhone:
          type: string
        Description:
          type: string
    RechargeCreateReply:
      type: object
      properties:
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/PropertyErrorData'
        Result:
          $ref: '#/components/schemas/RechargeCreate'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    RechargeCreate:
      type: object
      properties:
        RedeemCode:
          type: string
        RedeemUrl:
          type: string
    BatchRechargeCreateRequest:
      type: object
      properties:
        Requests:
          type: array
          items:
            $ref: '#/components/schemas/RechargeCreateRequest'
    BatchRechargeCreateReply:
      type: object
      properties:
        Result:
          type: array
          items:
            $ref: '#/components/schemas/RechargeCreateReply'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    PaymentMethodsReply:
      type: object
      properties:
        Result:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethod'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    SubPaymentMethodsReply:
      type: object
      properties:
        Result:
          type: array
          items:
            $ref: '#/components/schemas/SubPaymentMethod'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    CashInValidateRequest:
      type: object
      properties:
        Tid:
          type: string
        Pid:
          format: int32
          type: integer
        AmountPaid:
          format: double
          type: number
        ValidationCode1:
          type: string
        ValidationCode2:
          type: string
        ValidationCode3:
          type: string
        ValidationCode4:
          type: string
        Base64Image:
          type: string
        Base64ImageExtension:
          type: string
        PaymentTime:
          format: date-time
          type: string
    CashInValidateReply:
      type: object
      properties:
        Result:
          type: string
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/PropertyErrorData'
    CashInValidateTokenRequest:
      type: object
      properties:
        Qrcode:
          $ref: '#/components/schemas/Qrcode'
        QrcodeData:
          $ref: '#/components/schemas/QrcodeData'
    Qrcode:
      type: object
      properties:
        Tid:
          type: string
        Pid:
          format: int32
          type: integer
        PaymentTime:
          format: date-time
          type: string
    QrcodeData:
      type: object
      properties:
        Text:
          type: string
    CashInValidateTokenReply:
      type: object
      properties:
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/PropertyErrorData'
        Result:
          type: string
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    CashInTransferRequest:
      required:
        - Tid
        - Pid
        - ProdId
        - Amount
        - Description
        - PaymentMethod
        - SubPaymentMethod
        - Name
        - Email
        - MobilePhone
      type: object
      properties:
        Tid:
          type: string
        Pid:
          format: int32
          type: integer
        ProdId:
          format: int32
          type: integer
        Custom:
          type: string
        Amount:
          format: double
          type: number
        Description:
          type: string
        PaymentMethod:
          format: int32
          type: integer
        SubPaymentMethod:
          format: int32
          type: integer
        Name:
          type: string
        Email:
          type: string
        MobilePhone:
          type: string
        Document:
          type: string
        BankAgency:
          type: string
        BankAccountNumber:
          type: string
        BankAccountHolder:
          type: string
        BankAccountDocument:
          type: string
    CashInTransferReply:
      type: object
      properties:
        Result:
          $ref: '#/components/schemas/CashInTransfer'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    CashInTransfer:
      type: object
      properties:
        Transaction:
          $ref: '#/components/schemas/Transaction'
        Validation:
          $ref: '#/components/schemas/Validation'
        Parameters:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
    Validation:
      type: object
      properties:
        ValidationCode1:
          type: string
        ValidationCode2:
          type: string
        ValidationCode3:
          type: string
        ValidationCode4:
          type: string
    CashInDepositRequest:
      required:
        - Tid
        - Pid
        - ProdId
        - Amount
        - Description
        - PaymentMethod
        - SubPaymentMethod
        - Name
        - Email
        - MobilePhone
      type: object
      properties:
        Tid:
          type: string
        Pid:
          format: int32
          type: integer
        ProdId:
          format: int32
          type: integer
        Custom:
          type: string
        Amount:
          format: double
          type: number
        Description:
          type: string
        PaymentMethod:
          format: int32
          type: integer
        SubPaymentMethod:
          format: int32
          type: integer
        Name:
          type: string
        Email:
          type: string
        MobilePhone:
          type: string
        Document:
          type: string
    CashInDepositReply:
      type: object
      properties:
        Result:
          $ref: '#/components/schemas/CashinDeposit'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    CashinDeposit:
      type: object
      properties:
        Transaction:
          $ref: '#/components/schemas/Transaction'
        Validation:
          $ref: '#/components/schemas/Validation'
        Parameters:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
    BatchCashInDepositRequest:
      type: object
      properties:
        Requests:
          type: array
          items:
            $ref: '#/components/schemas/CashInDepositRequest'
    BatchCashInDepositReply:
      type: object
      properties:
        Result:
          type: array
          items:
            $ref: '#/components/schemas/CashInDepositReply'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    CashInAddBalanceRequest:
      type: object
      properties:
        Tid:
          type: string
        Pid:
          format: int32
          type: integer
        ProdId:
          format: int32
          type: integer
        Name:
          type: string
        Document:
          type: string
        Email:
          type: string
        MobilePhone:
          type: string
        Amount:
          format: double
          type: number
        Description:
          type: string
    CashInAddBalanceReply:
      type: object
      properties:
        Result:
          $ref: '#/components/schemas/CashInAddBalance'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    CashInAddBalance:
      type: object
      properties:
        Tid:
          type: string
        Pid:
          format: int32
          type: integer
        ProdId:
          format: int32
          type: integer
        Amount:
          format: double
          type: number
        Description:
          type: string
        PinCode:
          type: string
    InChangePaymentMethod:
      type: object
      properties:
        Tid:
          type: string
        Pid:
          format: int32
          type: integer
        ProdId:
          format: int32
          type: integer
        PaymentMethodId:
          format: int32
          type: integer
        SubPaymentMethodId:
          format: int32
          type: integer
        Wallet:
          $ref: '#/components/schemas/WalletData'
        Transfer:
          $ref: '#/components/schemas/TransferData'
        Card:
          $ref: '#/components/schemas/CardData'
    WalletData:
      type: object
      properties:
        Token:
          type: string
    TransferData:
      type: object
      properties:
        BankNumber:
          type: string
        BankBranchNumber:
          type: string
        BankAccountNumber:
          type: string
        BankAccountType:
          type: string
        BankAccountHolderName:
          type: string
        BankAccountHolderDocument:
          type: string
    CardData:
      type: object
      properties:
        Token:
          type: string
        AntiFraud:
          $ref: '#/components/schemas/CreditCardAntiFraud'
    InChangePaymentMethodReply:
      type: object
      properties:
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/PropertyErrorData'
        Result:
          $ref: '#/components/schemas/InPaymentMethodChanged'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    InPaymentMethodChanged:
      type: object
      properties:
        Transaction:
          $ref: '#/components/schemas/CompanyTransaction'
        Validation:
          $ref: '#/components/schemas/Validation'
        Parameters:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
    CompanyTransaction:
      required:
        - Tid
        - Pid
        - ProdId
        - Price
        - ItemDescription
        - PaymentMethod
        - SubPaymentMethod
      type: object
      properties:
        CompanyLogoUrl:
          type: string
          readOnly: true
        ClientMobilePhone:
          type: string
          readOnly: true
        AntiFraudPublicKey:
          type: string
          readOnly: true
        ClientName:
          type: string
          readOnly: true
        ClientCPF:
          type: string
          readOnly: true
        ClientEmail:
          type: string
          readOnly: true
        CompanyName:
          type: string
        Date:
          type: string
        Kind:
          format: int32
          type: integer
        Tid:
          type: string
        Pid:
          format: int32
          type: integer
        ProdId:
          format: int32
          type: integer
        Custom:
          type: string
        Price:
          format: double
          type: number
        ItemDescription:
          type: string
        PaymentMethod:
          format: int32
          type: integer
        SubPaymentMethod:
          format: int32
          type: integer
        Status:
          format: int32
          type: integer
        StatusName:
          type: string
    CreateBankSlipRequest:
      required:
        - Pid
        - ProdId
        - Tid
        - Amount
        - DueDate
        - Customer
      type: object
      properties:
        Pid:
          format: int32
          type: integer
        ProdId:
          format: int32
          type: integer
        Tid:
          type: string
        Amount:
          format: double
          type: number
        DueDate:
          format: date-time
          type: string
        OverdueLimitDate:
          format: date-time
          type: string
        Customer:
          $ref: '#/components/schemas/CustomerWithAddress'
        Recipient:
          $ref: '#/components/schemas/Recipient'
        Overdue:
          $ref: '#/components/schemas/BankSlipOverdue'
        DailyInterest:
          $ref: '#/components/schemas/BankSlipInterest'
    CustomerWithAddress:
      required:
        - Document
        - Name
        - Email
      type: object
      properties:
        Document:
          type: string
        Name:
          type: string
        Email:
          type: string
        MobilePhone:
          type: string
        Address:
          $ref: '#/components/schemas/Address'
    Recipient:
      required:
        - Document
        - Name
        - Email
      type: object
      properties:
        Document:
          type: string
        Name:
          type: string
        Email:
          type: string
        MobilePhone:
          type: string
        Address:
          $ref: '#/components/schemas/Address'
    BankSlipOverdue:
      required:
        - Date
      type: object
      properties:
        Date:
          format: date-time
          type: string
        Amount:
          format: double
          type: number
        Percentage:
          format: double
          type: number
    BankSlipInterest:
      required:
        - Date
      type: object
      properties:
        Date:
          format: date-time
          type: string
        Amount:
          format: double
          type: number
        Percentage:
          format: double
          type: number
    Address:
      required:
        - ZipCode
        - Street
        - Number
        - City
        - State
        - Country
      type: object
      properties:
        ZipCode:
          type: string
        Street:
          type: string
        Number:
          type: string
        City:
          type: string
        Neighborhood:
          type: string
        State:
          type: string
        Country:
          type: string
        Reference:
          type: string
        AdditionalInformation:
          type: string
    CreateBankSlipReply:
      type: object
      properties:
        Result:
          $ref: '#/components/schemas/BankSlipTransaction'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/PropertyErrorData'
    BankSlipTransaction:
      type: object
      properties:
        Transaction:
          $ref: '#/components/schemas/Transaction'
        BankSlip:
          $ref: '#/components/schemas/BankSlip'
        Parameters:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
    BankSlip:
      type: object
      properties:
        Barcode:
          type: string
        DigitableLine:
          type: string
        DueDate:
          format: date-time
          type: string
    GetBankSlipReply:
      type: object
      properties:
        Result:
          $ref: '#/components/schemas/Value'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/PropertyErrorData'
    Value:
      type: object
      properties:
        DownloadUrl:
          type: string
    CashOutTransferDebitRequest:
      required:
        - Tid
        - Pid
      type: object
      properties:
        Tid:
          type: string
        Document:
          type: string
        PinCode:
          type: string
        Pid:
          format: int32
          type: integer
    CashOutBalanceDebitReply:
      type: object
      properties:
        Result:
          $ref: '#/components/schemas/CashOutBalanceDebit'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    CashOutBalanceDebit:
      type: object
      properties:
        Tid:
          type: string
        Pid:
          format: int32
          type: integer
        ProdId:
          format: int32
          type: integer
        Amount:
          format: double
          type: number
        Description:
          type: string
    CashOutBalanceDebitRequest:
      required:
        - Tid
        - Pid
        - ProdId
        - Amount
        - Description
        - Name
        - Email
        - MobilePhone
      type: object
      properties:
        Tid:
          type: string
        Pid:
          format: int32
          type: integer
        ProdId:
          format: int32
          type: integer
        Custom:
          type: string
        Amount:
          format: double
          type: number
        Description:
          type: string
        Name:
          type: string
        Email:
          type: string
        MobilePhone:
          type: string
        Document:
          type: string
        PinCode:
          type: string
    CashOutBillPaymentRequest:
      type: object
      properties:
        Tid:
          type: string
        Pid:
          format: int32
          type: integer
        ProdId:
          format: int32
          type: integer
        Amount:
          format: double
          type: number
        DueDate:
          format: date-time
          type: string
        Name:
          type: string
        Email:
          type: string
        Document:
          type: string
        MobilePhone:
          type: string
        Description:
          type: string
        Barcode:
          type: string
    CashOutBillPaymentReply:
      type: object
      properties:
        Result:
          $ref: '#/components/schemas/CashOutBillPayment'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    CashOutBillPayment:
      type: object
      properties:
        Accepted:
          type: boolean
        Response:
          type: string
    CashOutReceiptReply:
      type: object
      properties:
        Result:
          $ref: '#/components/schemas/CashOutReceipts'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    CashOutReceipts:
      type: object
      properties:
        ReceiptsUrls:
          type: array
          items:
            type: string
    EBillRequest:
      type: object
      properties:
        Base64Image:
          type: string
        Pid:
          format: int32
          type: integer
        ProdId:
          format: int32
          type: integer
    EBillReply:
      type: object
      properties:
        Result:
          $ref: '#/components/schemas/EBill'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    EBill:
      type: object
      properties:
        Barcode:
          type: string
        Link:
          type: string
        DueDate:
          format: int64
          type: integer
        BillType:
          type: string
        Amount:
          format: double
          type: number
        Type:
          enum:
            - BILL_PAYMENT
            - QR_CODE
          type: string
    CashOutVerifyBillPaymentReply:
      type: object
      properties:
        Result:
          $ref: '#/components/schemas/CashOutVerifyBillPayment'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    CashOutVerifyBillPayment:
      type: object
      properties:
        Barcode:
          type: string
        Type:
          enum:
            - Billing
            - Service
            - Other
          type: string
        TypeName:
          type: string
        DueDate:
          format: date-time
          type: string
        Amount:
          format: double
          type: number
        BankIssuer:
          type: string
        ServiceKind:
          enum:
            - CityHall
            - Sanitation
            - EletricalOrGas
            - Telecommunication
            - GovernmentAgency
            - Company
            - TrafficTicket
            - Other
          type: string
        Security:
          $ref: '#/components/schemas/CashOutVerifyBillPaymentSecurity'
    CashOutVerifyBillPaymentSecurity:
      type: object
      properties:
        Approved:
          type: boolean
        ProdId:
          format: int32
          type: integer
    CashOutVerifyBankAccount:
      type: object
      properties:
        BankNumber:
          type: string
        BankBranchNumber:
          type: string
        BankAccountNumber:
          type: string
        BankAccountType:
          type: string
        BankAccountHolderName:
          type: string
        BankAccountHolderDocument:
          type: string
    CashOutVerifyBankAccountReply:
      type: object
      properties:
        Result:
          type: array
          items:
            $ref: '#/components/schemas/PropertyErrorData'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    CashOutTransferRequest:
      type: object
      properties:
        Pid:
          format: int32
          type: integer
        ProdId:
          format: int32
          type: integer
        Tid:
          type: string
        Amount:
          format: double
          type: number
        DueDate:
          format: date-time
          type: string
        Bank:
          type: string
        BankAgency:
          type: string
        BankAccount:
          type: string
        BankAccountHolder:
          type: string
        BankAccountHolderDoc:
          type: string
        BankAccountFgSavings:
          type: boolean
        Name:
          type: string
        Email:
          type: string
        Document:
          type: string
        MobilePhone:
          type: string
        Description:
          type: string
        BankAccountType:
          type: string
    CashOutTransferReply:
      type: object
      properties:
        Result:
          $ref: '#/components/schemas/CashOutTransfer'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    CashOutTransfer:
      type: object
      properties:
        Accepted:
          type: boolean
        Response:
          type: string
    BatchCashOutTransferRequest:
      type: object
      properties:
        Requests:
          type: array
          items:
            $ref: '#/components/schemas/CashOutTransferRequest'
    BatchCashOutTransferReply:
      type: object
      properties:
        Result:
          type: array
          items:
            $ref: '#/components/schemas/CashOutTransferReply'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    GetByIdentifierReply:
      type: object
      properties:
        Result:
          $ref: '#/components/schemas/GetByIdentifier'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    GetByIdentifier:
      type: object
      properties:
        Transaction:
          $ref: '#/components/schemas/CompanyTransaction'
        Validation:
          $ref: '#/components/schemas/Validation'
        Parameters:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
    TransactionsGetByLotReply:
      type: object
      properties:
        Result:
          type: string
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    CancelReply:
      type: object
      properties:
        Result:
          type: string
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    BatchCancelRequest:
      type: object
      properties:
        Requests:
          type: array
          items:
            $ref: '#/components/schemas/CancelRequest'
    CancelRequest:
      required:
        - Tid
      type: object
      properties:
        Tid:
          type: string
    BatchCancelReply:
      type: object
      properties:
        Result:
          type: array
          items:
            $ref: '#/components/schemas/CancelReply'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    GetTransactionPendingReply:
      type: object
      properties:
        Result:
          type: array
          items:
            $ref: '#/components/schemas/CashInTransfer'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    GetLastTransactionsReply:
      type: object
      properties:
        Result:
          type: array
          items:
            $ref: '#/components/schemas/CashInTransfer'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    UserBankAccountListRequest:
      type: object
      properties:
        Pid:
          format: int32
          type: integer
        ProdId:
          format: int32
          type: integer
        CustomerDocument:
          type: string
        ExternalCustomerId:
          type: string
    UserBankAccountListReply:
      type: object
      properties:
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/PropertyErrorData'
        Result:
          type: array
          items:
            $ref: '#/components/schemas/UserBankAccount'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    UserBankAccount:
      type: object
      properties:
        BankAccountId:
          format: int32
          type: integer
        Pid:
          format: int32
          type: integer
        ProdId:
          format: int32
          type: integer
        ExternalCustomerId:
          type: string
        CustomerName:
          type: string
        CustomerDocument:
          type: string
        BankNumber:
          type: string
        BankBranchNumber:
          type: string
        BankAccountNumber:
          type: string
        BankAccountType:
          type: string
        BankAccountHolderName:
          type: string
        BankAccountHolderDocument:
          type: string
        CreatedDate:
          format: date-time
          type: string
        Validated:
          type: boolean
        Blacklisted:
          type: boolean
        UpdatedDate:
          format: date-time
          type: string
    UserBankAccountRequest:
      type: object
      properties:
        Pid:
          format: int32
          type: integer
        ProdId:
          format: int32
          type: integer
        BankAccountId:
          format: int32
          type: integer
        ExternalCustomerId:
          type: string
        CustomerName:
          type: string
        CustomerDocument:
          type: string
        BankNumber:
          type: string
        BankBranchNumber:
          type: string
        BankAccountNumber:
          type: string
        BankAccountType:
          type: string
        BankAccountHolderName:
          type: string
        BankAccountHolderDocument:
          type: string
    UserBankAccountReply:
      type: object
      properties:
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/PropertyErrorData'
        Result:
          $ref: '#/components/schemas/UserBankAccount'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    UserBalanceReply:
      type: object
      properties:
        Result:
          $ref: '#/components/schemas/UserFinance'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    UserFinance:
      type: object
      properties:
        Id:
          format: int32
          type: integer
        Balance:
          format: double
          type: number
        Credit:
          format: double
          type: number
        PreferredBankCode:
          format: int32
          type: integer
    WithdrawalNetworksReply:
      type: object
      properties:
        Result:
          type: array
          items:
            $ref: '#/components/schemas/AtmNetworks'
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    WithdrawalCreateRequest:
      type: object
      properties:
        Tid:
          type: string
        Pid:
          format: int32
          type: integer
        ProdId:
          format: int32
          type: integer
        Network:
          format: int32
          type: integer
        Amount:
          format: double
          type: number
        Currency:
          enum:
            - BRL
          type: string
        Description:
          type: string
        CustomerName:
          type: string
        CustomerEmail:
          type: string
        CustomerDocument:
          type: string
        CustomerMobilePhone:
          type: string
        CustomerCurrentLatitude:
          type: string
        CustomerCurrentLongitude:
          type: string
        TwoFactorValidation:
          $ref: '#/components/schemas/WithdrawalValidation'
    WithdrawalValidation:
      type: object
      properties:
        Mode:
          enum:
            - Offline
            - Online
          type: string
        QuestionLabel:
          type: string
        AnswerMaxLength:
          format: int32
          type: integer
        OfflineQuestionAnswer:
          type: string
        OnlineVerificationUrl:
          type: string
    WithdrawalCreateReply:
      type: object
      properties:
        AvailableNetworks:
          type: array
          items:
            $ref: '#/components/schemas/AtmNetworks'
        NearbyLocations:
          type: array
          items:
            $ref: '#/components/schemas/AtmNearbyLocation'
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/PropertyErrorData'
        Result:
          type: string
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    WithdrawalCodeCreateRequest:
      type: object
      properties:
        Tid:
          type: string
        Pid:
          format: int32
          type: integer
        ProdId:
          format: int32
          type: integer
        Network:
          format: int32
          type: integer
        Amount:
          format: double
          type: number
        Currency:
          enum:
            - BRL
          type: string
        Description:
          type: string
        CustomerName:
          type: string
        CustomerEmail:
          type: string
        CustomerDocument:
          type: string
        CustomerMobilePhone:
          type: string
        WithdrawBeneficiaryName:
          type: string
        WithdrawBeneficiaryDocument:
          type: string
    WithdrawalCodeCreateReply:
      type: object
      properties:
        WithdrawBeneficiaryName:
          type: string
        WithdrawBeneficiaryDocument:
          type: string
        WithdrawCode:
          type: string
        AvailableNetworks:
          type: array
          items:
            $ref: '#/components/schemas/AtmNetworks'
        NearbyLocations:
          type: array
          items:
            $ref: '#/components/schemas/AtmNearbyLocation'
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/PropertyErrorData'
        Result:
          type: string
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
    WithdrawalProcessRequest:
      type: object
      properties:
        Tid:
          type: string
        Pid:
          format: int32
          type: integer
        QrCodeData:
          type: string
    WithdrawalProcessReply:
      type: object
      properties:
        CanRetry:
          type: boolean
        Terminal:
          $ref: '#/components/schemas/AtmNearbyLocation'
        Errors:
          type: array
          items:
            $ref: '#/components/schemas/PropertyErrorData'
        Result:
          type: string
        Success:
          type: boolean
        Message:
          type: string
        StatusCode:
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - Ambiguous
            - MovedPermanently
            - Moved
            - Found
            - Redirect
            - SeeOther
            - RedirectMethod
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - RedirectKeepVerb
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
x-readme:
  explorer-enabled: true
  proxy-enabled: true
  samples-enabled: true
